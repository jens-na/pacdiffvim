#!/bin/bash
#
# pacdiffvim, a pacnew file updater for vim enthusiasts 
# 
# Copyright (C) 2013, Jens Nazarenus <jems@0x6a.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

declare -r myname='pacdiffvim'
declare -r myversion='1.0.0'
declare -r tmpfile='/tmp/pacdiffvim.vim'

vimprog=${VIMPROG:-vim}
diffsearchpath=/etc

trap clean_up SIGINT SIGTERM EXIT

# cleans up the temporarily created files
clean_up() {
	rm -f $tmpfile
}

# returns the .pacnew files with find. The script uses $DIFFSEARCHPATH
# for the determination of the .pacnew files
get_files() {
	find "$diffsearchpath" -writable -iname "*.pacnew" 2>/dev/null | sed 's/\.pacnew//g'
}

# prints usage info for this shell script
usage() {
	echo -e  "Usage: $myname [OPTION]"
	echo -en "A pacnew file updater for vim enthusiasts.\n\n"
	echo -e  "  -r, --root <path>       Sets an alternative path where to search for .pacnew files"
	echo -e  "  -h, --help              Show this help file"
	echo -en "  -V, --version           Show version info of $myname\n\n"
	
	echo -e "Report bugs to: jens@0x6a.de"
	echo -e "$myname home page: <http://github.com/jens-na/$myname/>"
}

# prints the version info of this shell script
version() {
	printf "%s %s\n" "$myname" "$myversion"
	echo "Copyright (C) 2013 Jens Nazarenus <jens@0x6a.de>"
}

cat > $tmpfile << EOF
"--------------------------------------------------------------------
" temporarily vim file with functions to extend the standard vim 
" configuration.
" 
" This file is automatically generated and should not be deleted 
" or modified. You can delete this file if you are sure there is 
" no process of 'pacdiffvim' currently running.
"
" $myname - $myversion
"--------------------------------------------------------------------

if exists('g:loaded_pacdiffvim') || &cp || v:version < 700
  finish
endif
let g:loaded_pacdiffvim = 1

" vim function to show the next available diff. (if any)
function! PacNext()
	tabnext	
endfunction

function! PacOverwriteWithPacnew()
	wincmd h
	%diffput
	call PacOK()
endfunction

" vim function to save the file and delete the .pacnew file
" afterwards. 
function! PacOK()
	wincmd l
	write
	let pacnew_file = expand('%:p') . ".pacnew"
	let success = system("rm -f " . pacnew_file)
	if success != 0
		throw "PacNew: Could not delete " . pacnew_file
	endif

	" close tab or quit pacdiffvim	
	try
		tabclose
	catch /E784:/
		call PacExit()
	endtry
endfunction

" vim function to end everything immediatly without saving
" anything.
function! PacExit()
	qall!
endfunction

" commands
command PacNext :call PacNext()
command PacOK :call PacOK()
command PacOverwriteWithPacnew :call PacOverwriteWithPacnew()
command PacExit :call PacExit()
EOF

if [ $# -gt 0 ]; then
	case $1 in
		-V|--version)
			version;
			exit 0;;
		-h|--help)
			usage
			exit 0;;
		-r|--root)
			if [ -z $2 ]; then
				echo "Parameter -r (--root) requires an argument."
				exit 1
			fi
			diffsearchpath="$2"
			;;
		*)
			usage
			exit 1;;
	esac
			
fi

files=$(get_files)
set -- $files
let max=${#@}-1

if [ ${#@} -eq 0 ]; then
	exit 0
fi

vimcmd="$vimprog -S $tmpfile $files"
vimcmd="$vimcmd +\"vert diffsplit  %.pacnew\""

for i in $(seq 1 $max)
do
	vimcmd="$vimcmd +\"tabnew\" +\"only\" +\"n\" +\"vert diffsplit %.pacnew\""
done

vimcmd="$vimcmd +\"tabnext\""

eval $vimcmd
